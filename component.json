{
    "title": "Rail Station Information",
    "description": "Rail line and station information, including locations, fares, times, and parking.",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/wmata.com/rail-station/1.0/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "http://api.wmata.com/Rail.svc",
                    "https://api.wmata.com/Rail.svc",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_apiKeyHeader": {
                "label": "api_key (apiKeyHeader)",
                "viewClass": "TextFieldView"
            },
            "auth_apiKeyQuery": {
                "label": "api_key (apiKeyQuery)",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "action_5476364f031f5909e4fe3314": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3314.js",
            "title": "XML - Lines",
            "description": "DESCRIPTION\nReturns information about all rail lines.\n\nRESPONSE ELEMENTS\nElementDescriptionLinesArray containing line information (Line).Line Elements\nDisplayNameFull name of line color.EndStationCodeEnd station code. For example,\nwill be E10 (Greenbelt) for the Green Line, B11 (Glenmont) for the Red Line,\netc. Use this value in other rail-related APIs to retrieve data about a station.\nInternalDestination1Intermediate terminal station code. During normal service,\nsome trains on some lines might end their trip prior to the StartStationCode or\nEndStationCode. A good example is on the Red Line where some trains stop at A11\n(Grosvenor) or B08 (Silver Spring). Empty string if not defined.\nInternalDestination2Similar to InternalDestination1.LineCodeTwo-letter\nabbreviation for the line (e.g.: RD, BL, YL, OR, GR, or SV).StartStationCode\nStart station code. For example, will be F11 (Branch Avenue) for the Green Line,\nA15 (Shady Grove) for the Red Line, etc. Use this value in other rail-related\nAPIs to retrieve data about a station.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3314.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3316": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3316.js",
            "title": "XML - Path Between Stations",
            "description": "DESCRIPTION\nReturns a set of ordered stations and distances between two stations on thesame\nline.\n\nNote that this method is not suitable on its own as a pathfinding solution\nbetween stations.\n\nRESPONSE ELEMENTS\nElementDescriptionPathArray containing path details (MetroPathItem)MetroPathItem\nElementsDistanceToPrevDistance in feet to the previous station in the list.\nLineCodeTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR, or SV)\nthis station's platform is on.SeqNumOrdered sequence number.StationCodeStation\ncode for this station. Use this value in other rail-related APIs to retrieve\ndata about a station.StationNameFull name for this station, as shown on the\nWMATA website.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3316.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe331b": {
            "main": "./lib/actions/action_5476364f031f5909e4fe331b.js",
            "title": "XML - Station to Station Information",
            "description": "DESCRIPTION\nReturns a distance, fare information, and estimated travel time between any two\nstations, including those on different lines. Omit both parameters to retrieve\ndata for all stations.\n\nRESPONSE ELEMENTS\nElementDescriptionStationToStationInfosArray containing station to station\ninformation (StationToStationInfo).StationToStationInfo ElementsCompositeMiles\nAverage of distance traveled between two stations and straight-line distance (as\nused for WMATA fare calculations). For more details, please refer to WMATA's \nTariff on Fares\n[https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6]\n.DestinationStationDestination station code. Use this value in other\nrail-related APIs to retrieve data about a station.RailFareStructure containing \nfare information.RailTimeEstimated travel time (schedule time) in minutes\nbetween the source and destination station. This is not correlated to minutes \n(Min) in Real-Time Rail Predictions.SourceStationOrigin station code. Use this\nvalue in other rail-related APIs to retrieve data about a station.RailFare\nElementsOffPeakTimeFare during off-peak times (times other than the ones\ndescribed below).PeakTimeFare during peak times (weekdays from opening to 9:30\nAM and 3-7 PM, and weekends from midnight to closing).SeniorDisabledReduced fare\nfor senior citizens or people with disabilities\n[http://www.wmata.com/fares/reduced.cfm].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe331b.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3317": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3317.js",
            "title": "XML - Station Entrances",
            "description": "DESCRIPTION\nReturns a list of nearby station entrances based on latitude, longitude, and\nradius (meters). Omit search parameters to return all station entrances.\n\nRESPONSE ELEMENTS\nElementDescriptionEntrancesArray containing detailed information about station\nentrances (StationEntrance).StationEntrance ElementsDescriptionAdditional\ninformation for the entrance, if available. Currently available data usually\nshows the same value as the Name element.IDDeprecated.LatLatitude.LonLongitude.\nNameName of the entrance (usually the station name and nearest intersection).\nStationCode1The station code associated with this entrance. Use this value in\nother rail-related APIs to retrieve data about a station.StationCode2For\nstations containing multiple platforms (e.g.: Gallery Place, Fort Totten,\nL'Enfant Plaza, and Metro Center), the other station code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3317.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3318": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3318.js",
            "title": "XML - Station Information",
            "description": "DESCRIPTION\nReturns station location and address information based on a given StationCode.\n\nRESPONSE ELEMENTS\nElementDescriptionAddressStructure describing address information.CodeStation\ncode. Repeated from input.LatLatitude.LineCode1Two-letter abbreviation for the\nline (e.g.: RD, BL, YL, OR, GR, or SV) served by this station.LineCode2\nAdditional line served by this station. This is often the case when stations\nhave multiple platforms (e.g.: Gallery Place, Fort Totten, L'Enfant Plaza, and\nMetro Center).LineCode3Similar to function as LineCodeX.LineCode4Similar to\nfunction as LineCodeX. Currently not in use.LonLongitude.NameStation name.\nStationTogether1For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional StationCode will be\nlisted here.StationTogether2Similar in function to StationTogether2. Currently\nnot in use.Address ElementsCityCity.StateState (abbreviated).StreetStreet\naddress (for GPS use).ZipZip code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3318.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3315": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3315.js",
            "title": "XML - Parking Information",
            "description": "DESCRIPTION\nReturns parking information at a station based on a given StationCode. Omit the\nStationCode to return parking information for all stations.\n\nIf a station has no parking, the StationsParking element will contain no child\nelements.\n\nRESPONSE ELEMENTS\nElementDescriptionStationsParkingArray containing station parking information (\nStationParking).StationParking ElementsCodeStation code. Useful when returning\nparking information for all stations. Use this value in other rail-related APIs\nto retrieve data about a station.NotesWhen not NULL, provides additional parking\nresources such as nearby lots.AllDayParkingStructure describing all-day parking \noptions.ShortTermParkingStructure describing short-term parking options.\nAllDayParking ElementsTotalCountNumber of all-day parking spots available at a\nstation.RiderCostAll-day cost per day (weekday) for Metro riders. NULL when no\nall-day spots are available. For most stations, this value is identical to the\nNonRiderCost.\n\nFor cases where the NonRiderCost is different, the lower cost per day requires a\nvalid rail trip using a SmarTrip(r) card originating from a station other than the\none where the patron parked. To receive this lower rate, patrons must pay for\ntheir parking with the same SmarTrip(r) card used to enter/exit Metrorail, and\nmust exit the parking lot within two hours of exiting Metrorail.NonRiderCost\nAll-day cost per day (weekday) for non-Metro riders. NULL when no all-day spots\nare available.ShortTermParking ElementsSaturdayRiderCostSimilar to RiderCost,\nexcept denoting Saturday prices.SaturdayNonRiderCostSimilar to NonRiderCost,\nexcept denoting Saturday prices.TotalCountNumber of short-term parking spots\navailable at a station (parking meters).NotesMisc. information relating to\nshort-term parking. NULL when no short-term spots are available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3315.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe331a": {
            "main": "./lib/actions/action_5476364f031f5909e4fe331a.js",
            "title": "XML - Station Timings",
            "description": "DESCRIPTION\nReturns opening and scheduled first/last train times based on a given\nStationCode. Omit the StationCode to return timing information for all stations.\n\nNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\nfull set of train times at such stations.\n\nRESPONSE ELEMENTS\nElementDescriptionStationTimesArray containing station timing information (\nStationTime).StationTime ElementsCodeStation code for this station. Use this\nvalue in other rail-related APIs to retrieve data about a station.StationName\nFull name of the station.*Day ElementsContainer elements containing timing\ninformation based onday of the week.Monday/Tuesday/Wednesday/etc. Elements\nOpeningTimeStation opening time. Format is HH:mm.FirstTrainsStructure containing \nfirst traininformation.LastTrainsStructure containing last traininformation.\nFirstTrains ElementsTimeFirst train leaves the station at this time. Format is\nHH:mm.DestinationStationStation code for the train's destination. Use this value\nin other rail-related APIs to retrieve data about a station.LastTrains Elements\nTimeLast train leaves the station at this time. Format is HH:mm. Note that when\nthe time is AM, it signifies the next day. For example, a value of 02:30 under a\nSaturday element means the last train leaves on Sunday at 2:30 AM.\nDestinationStationStation code for the train's destination. Use this value in\nother rail-related APIs to retrieve data about a station.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe331a.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3319": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3319.js",
            "title": "XML - Station List",
            "description": "DESCRIPTION\nReturns a list of station location and address information based on a given\nLineCode. Omit the LineCode to return all stations. The response is an array of\nobjects identical to those returned in the Station Information method.\n\nRESPONSE ELEMENTS\nElementDescriptionStationsArray containing station information (Station).Station\nElementsAddressStructure describing address information.CodeStation code.\nRepeated from input.LatLatitude.LineCode1Two-letter abbreviation for the line\n(e.g.: RD, BL, YL, OR, GR, or SV) served by this station.LineCode2Additional\nline served by this station. This is often the case when stations have multiple\nplatforms (e.g.: Gallery Place, Fort Totten, L'Enfant Plaza, and Metro Center).\nLineCode3Similar to function as LineCodeX.LineCode4Similar to function as\nLineCodeX. Currently not in use.LonLongitude.NameStation name.StationTogether1\nFor stations with multiple platforms (e.g.: Gallery Place, Fort Totten, L'Enfant\nPlaza, and Metro Center), the additional StationCode will be listed here.\nStationTogether2Similar in function to StationTogether2. Currently not in use.\nAddress ElementsCityCity.StateState (abbreviated).StreetStreet address (for GPS\nuse).ZipZip code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3319.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe330c": {
            "main": "./lib/actions/action_5476364f031f5909e4fe330c.js",
            "title": "JSON - Lines",
            "description": "DESCRIPTION\nReturns information about all rail lines.\n\nRESPONSE ELEMENTS\nElementDescriptionLinesArray containing line information (Line).Line Elements\nDisplayNameFull name of line color.EndStationCodeEnd station code. For example,\nwill be E10 (Greenbelt) for the Green Line, B11 (Glenmont) for the Red Line,\netc. Use this value in other rail-related APIs to retrieve data about a station.\nInternalDestination1Intermediate terminal station code. During normal service,\nsome trains on some lines might end their trip prior to the StartStationCode or\nEndStationCode. A good example is on the Red Line where some trains stop at A11\n(Grosvenor) or B08 (Silver Spring). Empty string if not defined.\nInternalDestination2Similar to InternalDestination1.LineCodeTwo-letter\nabbreviation for the line (e.g.: RD, BL, YL, OR, GR, or SV).StartStationCode\nStart station code. For example, will be F11 (Branch Avenue) for the Green Line,\nA15 (Shady Grove) for the Red Line, etc. Use this value in other rail-related\nAPIs to retrieve data about a station.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe330c.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe330e": {
            "main": "./lib/actions/action_5476364f031f5909e4fe330e.js",
            "title": "JSON - Path Between Stations",
            "description": "DESCRIPTION\nReturns a set of ordered stations and distances between two stations on thesame\nline.\n\nNote that this method is not suitable on its own as a pathfinding solution\nbetween stations.\n\nRESPONSE ELEMENTS\nElementDescriptionPathArray containing path details (MetroPathItem)MetroPathItem\nElementsDistanceToPrevDistance in feet to the previous station in the list.\nLineCodeTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR, or SV)\nthis station's platform is on.SeqNumOrdered sequence number.StationCodeStation\ncode for this station. Use this value in other rail-related APIs to retrieve\ndata about a station.StationNameFull name for this station, as shown on the\nWMATA website.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe330e.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3313": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3313.js",
            "title": "JSON - Station to Station Information",
            "description": "DESCRIPTION\nReturns a distance, fare information, and estimated travel time between any two\nstations, including those on different lines. Omit both parameters to retrieve\ndata for all stations.\n\nRESPONSE ELEMENTS\nElementDescriptionStationToStationInfosArray containing station to station\ninformation (StationToStationInfo).StationToStationInfo ElementsCompositeMiles\nAverage of distance traveled between two stations and straight-line distance (as\nused for WMATA fare calculations). For more details, please refer to WMATA's \nTariff on Fares\n[https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6]\n.DestinationStationDestination station code. Use this value in other\nrail-related APIs to retrieve data about a station.RailFareStructure containing \nfare information.RailTimeEstimated travel time (schedule time) in minutes\nbetween the source and destination station. This is not correlated to minutes \n(Min) in Real-Time Rail Predictions.SourceStationOrigin station code. Use this\nvalue in other rail-related APIs to retrieve data about a station.RailFare\nElementsOffPeakTimeFare during off-peak times (times other than the ones\ndescribed below).PeakTimeFare during peak times (weekdays from opening to 9:30\nAM and 3-7 PM, and weekends from midnight to closing).SeniorDisabledReduced fare\nfor senior citizens or people with disabilities\n[http://www.wmata.com/fares/reduced.cfm].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3313.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe330f": {
            "main": "./lib/actions/action_5476364f031f5909e4fe330f.js",
            "title": "JSON - Station Entrances",
            "description": "DESCRIPTION\nReturns a list of nearby station entrances based on latitude, longitude, and\nradius (meters). Omit search parameters to return all station entrances.\n\nRESPONSE ELEMENTS\nElementDescriptionEntrancesArray containing detailed information about station\nentrances (StationEntrance).StationEntrance ElementsDescriptionAdditional\ninformation for the entrance, if available. Currently available data usually\nshows the same value as the Name element.IDDeprecated.LatLatitude.LonLongitude.\nNameName of the entrance (usually the station name and nearest intersection).\nStationCode1The station code associated with this entrance. Use this value in\nother rail-related APIs to retrieve data about a station.StationCode2For\nstations containing multiple platforms (e.g.: Gallery Place, Fort Totten,\nL'Enfant Plaza, and Metro Center), the other station code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe330f.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3310": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3310.js",
            "title": "JSON - Station Information",
            "description": "DESCRIPTION\nReturns station location and address information based on a given StationCode.\n\nRESPONSE ELEMENTS\nElementDescriptionAddressStructure describing address information.CodeStation\ncode. Repeated from input.LatLatitude.LineCode1Two-letter abbreviation for the\nline (e.g.: RD, BL, YL, OR, GR, or SV) served by this station.LineCode2\nAdditional line served by this station. This is often the case when stations\nhave multiple platforms (e.g.: Gallery Place, Fort Totten, L'Enfant Plaza, and\nMetro Center).LineCode3Similar to function as LineCodeX.LineCode4Similar to\nfunction as LineCodeX. Currently not in use.LonLongitude.NameStation name.\nStationTogether1For stations with multiple platforms (e.g.: Gallery Place, Fort\nTotten, L'Enfant Plaza, and Metro Center), the additional StationCode will be\nlisted here.StationTogether2Similar in function to StationTogether2. Currently\nnot in use.Address ElementsCityCity.StateState (abbreviated).StreetStreet\naddress (for GPS use).ZipZip code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3310.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe330d": {
            "main": "./lib/actions/action_5476364f031f5909e4fe330d.js",
            "title": "JSON - Parking Information",
            "description": "DESCRIPTION\nReturns parking information at a station based on a given StationCode. Omit the\nStationCode to return parking information for all stations.\n\nIf a station has no parking, the StationsParking element will contain no child\nelements.\n\nRESPONSE ELEMENTS\nElementDescriptionStationsParkingArray containing station parking information (\nStationParking).StationParking ElementsCodeStation code. Useful when returning\nparking information for all stations. Use this value in other rail-related APIs\nto retrieve data about a station.NotesWhen not NULL, provides additional parking\nresources such as nearby lots.AllDayParkingStructure describing all-day parking \noptions.ShortTermParkingStructure describing short-term parking options.\nAllDayParking ElementsTotalCountNumber of all-day parking spots available at a\nstation.RiderCostAll-day cost per day (weekday) for Metro riders. NULL when no\nall-day spots are available. For most stations, this value is identical to the\nNonRiderCost.\n\nFor cases where the NonRiderCost is different, the lower cost per day requires a\nvalid rail trip using a SmarTrip(r) card originating from a station other than the\none where the patron parked. To receive this lower rate, patrons must pay for\ntheir parking with the same SmarTrip(r) card used to enter/exit Metrorail, and\nmust exit the parking lot within two hours of exiting Metrorail.NonRiderCost\nAll-day cost per day (weekday) for non-Metro riders. NULL when no all-day spots\nare available.ShortTermParking ElementsSaturdayRiderCostSimilar to RiderCost,\nexcept denoting Saturday prices.SaturdayNonRiderCostSimilar to NonRiderCost,\nexcept denoting Saturday prices.TotalCountNumber of short-term parking spots\navailable at a station (parking meters).NotesMisc. information relating to\nshort-term parking. NULL when no short-term spots are available.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe330d.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3312": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3312.js",
            "title": "JSON - Station Timings",
            "description": "DESCRIPTION\nReturns opening and scheduled first/last train times based on a given\nStationCode. Omit the StationCode to return timing information for all stations.\n\nNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\nfull set of train times at such stations.\n\nRESPONSE ELEMENTS\nElementDescriptionStationTimesArray containing station timing information (\nStationTime).StationTime ElementsCodeStation code for this station. Use this\nvalue in other rail-related APIs to retrieve data about a station.StationName\nFull name of the station.*Day ElementsContainer elements containing timing\ninformation based onday of the week.Monday/Tuesday/Wednesday/etc. Elements\nOpeningTimeStation opening time. Format is HH:mm.FirstTrainsStructure containing \nfirst traininformation.LastTrainsStructure containing last traininformation.\nFirstTrains ElementsTimeFirst train leaves the station at this time. Format is\nHH:mm.DestinationStationStation code for the train's destination. Use this value\nin other rail-related APIs to retrieve data about a station.LastTrains Elements\nTimeLast train leaves the station at this time. Format is HH:mm. Note that when\nthe time is AM, it signifies the next day. For example, a value of 02:30 under a\nSaturday element means the last train leaves on Sunday at 2:30 AM.\nDestinationStationStation code for the train's destination. Use this value in\nother rail-related APIs to retrieve data about a station.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3312.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "action_5476364f031f5909e4fe3311": {
            "main": "./lib/actions/action_5476364f031f5909e4fe3311.js",
            "title": "JSON - Station List",
            "description": "DESCRIPTION\nReturns a list of station location and address information based on a given\nLineCode. Omit the LineCode to return all stations. The response is an array of\nobjects identical to those returned in the Station Information method.\n\nRESPONSE ELEMENTS\nElementDescriptionStationsArray containing station information (Station).Station\nElementsAddressStructure describing address information.CodeStation code.\nRepeated from input.LatLatitude.LineCode1Two-letter abbreviation for the line\n(e.g.: RD, BL, YL, OR, GR, or SV) served by this station.LineCode2Additional\nline served by this station. This is often the case when stations have multiple\nplatforms (e.g.: Gallery Place, Fort Totten, L'Enfant Plaza, and Metro Center).\nLineCode3Similar to function as LineCodeX.LineCode4Similar to function as\nLineCodeX. Currently not in use.LonLongitude.NameStation name.StationTogether1\nFor stations with multiple platforms (e.g.: Gallery Place, Fort Totten, L'Enfant\nPlaza, and Metro Center), the additional StationCode will be listed here.\nStationTogether2Similar in function to StationTogether2. Currently not in use.\nAddress ElementsCityCity.StateState (abbreviated).StreetStreet address (for GPS\nuse).ZipZip code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/action_5476364f031f5909e4fe3311.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}